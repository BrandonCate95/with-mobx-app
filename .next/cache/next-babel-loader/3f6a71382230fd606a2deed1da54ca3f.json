{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nimport { action, observable } from 'mobx';\nimport { useStaticRendering } from 'mobx-react';\nconst isServer = true;\nuseStaticRendering(isServer);\nexport let Store = (_class = (_temp = class Store {\n  constructor() {\n    _initializerDefineProperty(this, \"lastUpdate\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"light\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"start\", _descriptor3, this);\n\n    this.stop = () => clearInterval(this.timer);\n  }\n\n  hydrate(serializedStore) {\n    this.lastUpdate = serializedStore.lastUpdate != null ? serializedStore.lastUpdate : _Date$now();\n    this.light = !!serializedStore.light;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"lastUpdate\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"light\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"start\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.timer = setInterval(() => {\n        this.lastUpdate = _Date$now();\n        this.light = true;\n      }, 1000);\n    };\n  }\n})), _class);\nexport async function fetchInitialStoreState() {\n  // You can do anything to fetch initial store state\n  return {};\n}","map":{"version":3,"sources":["C:\\xampp\\htdocs\\with-mobx-app\\store.js"],"names":["action","observable","useStaticRendering","isServer","Store","stop","clearInterval","timer","hydrate","serializedStore","lastUpdate","light","setInterval","fetchInitialStoreState"],"mappings":";;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AAEA,MAAMC,QAAQ,OAAd;AACAD,kBAAkB,CAACC,QAAD,CAAlB;AAEA,WAAaC,KAAb,sBAAO,MAAMA,KAAN,CAAY;AAAA;AAAA;;AAAA;;AAAA;;AAAA,SAmBjBC,IAnBiB,GAmBV,MAAMC,aAAa,CAAC,KAAKC,KAAN,CAnBT;AAAA;;AAIjBC,EAAAA,OAAO,CAACC,eAAD,EAAkB;AACvB,SAAKC,UAAL,GACED,eAAe,CAACC,UAAhB,IAA8B,IAA9B,GACID,eAAe,CAACC,UADpB,GAEI,WAHN;AAIA,SAAKC,KAAL,GAAa,CAAC,CAACF,eAAe,CAACE,KAA/B;AACD;;AAVgB,CAAnB,oFACGV,UADH;AAAA;AAAA;AAAA;AAAA;AAAA,WAC2B,CAD3B;AAAA;AAAA,yEAEGA,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WAEsB,KAFtB;AAAA;AAAA,yEAYGD,MAZH;AAAA;AAAA;AAAA;AAAA;AAAA,WAYkB,MAAM;AACpB,WAAKO,KAAL,GAAaK,WAAW,CAAC,MAAM;AAC7B,aAAKF,UAAL,GAAkB,WAAlB;AACA,aAAKC,KAAL,GAAa,IAAb;AACD,OAHuB,EAGrB,IAHqB,CAAxB;AAID,KAjBH;AAAA;AAAA;AAsBA,OAAO,eAAeE,sBAAf,GAAwC;AAC7C;AACA,SAAO,EAAP;AACD","sourcesContent":["import { action, observable } from 'mobx'\nimport { useStaticRendering } from 'mobx-react'\n\nconst isServer = typeof window === 'undefined'\nuseStaticRendering(isServer)\n\nexport class Store {\n  @observable lastUpdate = 0\n  @observable light = false\n\n  hydrate(serializedStore) {\n    this.lastUpdate =\n      serializedStore.lastUpdate != null\n        ? serializedStore.lastUpdate\n        : Date.now()\n    this.light = !!serializedStore.light\n  }\n\n  @action start = () => {\n    this.timer = setInterval(() => {\n      this.lastUpdate = Date.now()\n      this.light = true\n    }, 1000)\n  }\n\n  stop = () => clearInterval(this.timer)\n}\n\nexport async function fetchInitialStoreState() {\n  // You can do anything to fetch initial store state\n  return {}\n}\n"]},"metadata":{},"sourceType":"module"}