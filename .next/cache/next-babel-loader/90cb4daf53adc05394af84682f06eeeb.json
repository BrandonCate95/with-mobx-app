{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nimport { action, observable } from 'mobx';\nimport { useStaticRendering } from 'mobx-react';\nvar isServer = false;\nuseStaticRendering(isServer);\nexport var Store = (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Store() {\n    var _this = this;\n\n    _classCallCheck(this, Store);\n\n    _initializerDefineProperty(this, \"lastUpdate\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"light\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"start\", _descriptor3, this);\n\n    this.stop = function () {\n      return clearInterval(_this.timer);\n    };\n  }\n\n  _createClass(Store, [{\n    key: \"hydrate\",\n    value: function hydrate(serializedStore) {\n      this.lastUpdate = serializedStore.lastUpdate != null ? serializedStore.lastUpdate : _Date$now();\n      this.light = !!serializedStore.light;\n    }\n  }]);\n\n  return Store;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"lastUpdate\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"light\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"start\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function () {\n      _this2.timer = setInterval(function () {\n        _this2.lastUpdate = _Date$now();\n        _this2.light = true;\n      }, 1000);\n    };\n  }\n})), _class);\nexport function fetchInitialStoreState() {\n  return _fetchInitialStoreState.apply(this, arguments);\n}\n\nfunction _fetchInitialStoreState() {\n  _fetchInitialStoreState = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {});\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchInitialStoreState.apply(this, arguments);\n}","map":{"version":3,"sources":["C:\\xampp\\htdocs\\with-mobx-app\\store.js"],"names":["action","observable","useStaticRendering","isServer","Store","stop","clearInterval","timer","serializedStore","lastUpdate","light","setInterval","fetchInitialStoreState"],"mappings":";;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;AACA,SAASC,kBAAT,QAAmC,YAAnC;AAEA,IAAMC,QAAQ,QAAd;AACAD,kBAAkB,CAACC,QAAD,CAAlB;AAEA,WAAaC,KAAb;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAmBEC,IAnBF,GAmBS;AAAA,aAAMC,aAAa,CAAC,KAAI,CAACC,KAAN,CAAnB;AAAA,KAnBT;AAAA;;AAAA;AAAA;AAAA,4BAIUC,eAJV,EAI2B;AACvB,WAAKC,UAAL,GACED,eAAe,CAACC,UAAhB,IAA8B,IAA9B,GACID,eAAe,CAACC,UADpB,GAEI,WAHN;AAIA,WAAKC,KAAL,GAAa,CAAC,CAACF,eAAe,CAACE,KAA/B;AACD;AAVH;;AAAA;AAAA,uFACGT,UADH;AAAA;AAAA;AAAA;AAAA;AAAA,WAC2B,CAD3B;AAAA;AAAA,yEAEGA,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WAEsB,KAFtB;AAAA;AAAA,yEAYGD,MAZH;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,WAYkB,YAAM;AACpB,MAAA,MAAI,CAACO,KAAL,GAAaI,WAAW,CAAC,YAAM;AAC7B,QAAA,MAAI,CAACF,UAAL,GAAkB,WAAlB;AACA,QAAA,MAAI,CAACC,KAAL,GAAa,IAAb;AACD,OAHuB,EAGrB,IAHqB,CAAxB;AAID,KAjBH;AAAA;AAAA;AAsBA,gBAAsBE,sBAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEE,EAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { action, observable } from 'mobx'\nimport { useStaticRendering } from 'mobx-react'\n\nconst isServer = typeof window === 'undefined'\nuseStaticRendering(isServer)\n\nexport class Store {\n  @observable lastUpdate = 0\n  @observable light = false\n\n  hydrate(serializedStore) {\n    this.lastUpdate =\n      serializedStore.lastUpdate != null\n        ? serializedStore.lastUpdate\n        : Date.now()\n    this.light = !!serializedStore.light\n  }\n\n  @action start = () => {\n    this.timer = setInterval(() => {\n      this.lastUpdate = Date.now()\n      this.light = true\n    }, 1000)\n  }\n\n  stop = () => clearInterval(this.timer)\n}\n\nexport async function fetchInitialStoreState() {\n  // You can do anything to fetch initial store state\n  return {}\n}\n"]},"metadata":{},"sourceType":"module"}